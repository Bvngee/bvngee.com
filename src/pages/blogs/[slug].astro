---
import BasePageLayout from "../../layouts/BasePageLayout.astro";
import PageContainer from "../../components/PageContainer.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import BlogContentContainer from "../../components/BlogContentContainer.astro";

export async function getStaticPaths() {
    const blogs = await getCollection("blog");
    return blogs.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const entry = Astro.props.entry as CollectionEntry<"blog">;

let edits: string[] = entry.data.edits.map(
    (edit) => edit.date + ": " + edit.desc,
);
---

<BasePageLayout title={entry.data.title}>
    <PageContainer>
        <div id="header">
            <h1 id="blog-title">{entry.data.title}</h1>
            <p id="blog-date">
                {entry.data.publishedDate?.longFormat}
                {
                    entry.data.edits.length > 0 ? (
                        <span>
                            (<a href="#edits">edits</a>)
                        </span>
                    ) : null
                }
            </p>
        </div>
        <div id="blog-card">
            <BlogContentContainer post={entry} />
        </div>
        <div id="footer">
            <div id="edits">
                {
                    edits.length > 0 ? (
                        <>
                            <p>Edits:</p>
                            <ul>
                                {entry.data.edits.map((e) => (
                                    <li>
                                        {e.date}: {e.desc}
                                    </li>
                                ))}
                            </ul>
                        </>
                    ) : null
                }
            </div>
            <div id="right">
                <p id="copyright">
                    Â© {entry.data.publishedDate?.dateObject.getUTCFullYear()}
                    Jack N.
                </p>
                <a id="back-to-top" href="#nav-links">
                    <em>(back to top)</em>
                </a>
            </div>
        </div>
    </PageContainer>
</BasePageLayout>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const backToTop = document.getElementById("back-to-top");
        function checkScroll() {
            if (window.scrollY > 0) {
                backToTop!.style.display = "block";
            }
        }
        checkScroll(); // page load
        window.addEventListener("scroll", checkScroll);
        window.addEventListener("resize", checkScroll);
    });
</script>
<style>
    #header {
        display: flex;
        justify-content: space-between;
        padding: 0 10px;
    }
    #blog-title {
        flex-grow: 0;
        margin: 0;
        max-width: 75%;
        text-shadow: 2px 4px 9px rgba(0, 0, 0, 0.4);
    }
    #blog-date {
        align-content: end;
        margin-bottom: 2px;
        color: var(--gray2);
    }
    #blog-date span {
        padding-left: 0.2em;
    }
    #blog-date a {
        color: var(--gray2);
        padding: 0 1px;
    }
    #blog-card {
        padding: 15px;
        margin: 20px 0 0 0;
        background-color: var(--bg2);
        border-radius: 10px;
        box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 10px;
    }
    #footer {
        color: var(--gray2);
        display: flex;
        flex-direction: row;
        gap: 3rem;
        justify-content: space-between;
        margin: 20px 15px;
        margin-bottom: 100px;
    }
    #footer p {
        display: inline;
        margin: 2px;
    }
    #edits {
        max-width: 55%;
        /* text-wrap: balance; */
    }
    #edits ul {
        margin: 0;
        padding-left: 2em;
    }
    #edits li {
        padding: 0.2em 0;
    }
    #right {
        display: flex;
        flex-direction: column;
        text-align: center;
        gap: 0.3em;
    }
    #right #copyright {
        /* stay one line */
        overflow: hidden;
        white-space: nowrap;
    }
    #right #back-to-top {
        display: none; /* updated in js if page is scrolled */
        color: var(--gray2);
    }
</style>
